// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Emp.proto

package Emppb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Employee struct {
	EmployeeId           int32    `protobuf:"varint,1,opt,name=Employee_id,json=EmployeeId,proto3" json:"Employee_id,omitempty"`
	EmployeeName         string   `protobuf:"bytes,2,opt,name=Employee_name,json=EmployeeName,proto3" json:"Employee_name,omitempty"`
	EmployeeMail         string   `protobuf:"bytes,3,opt,name=Employee_mail,json=EmployeeMail,proto3" json:"Employee_mail,omitempty"`
	EmployeeMobile       string   `protobuf:"bytes,4,opt,name=Employee_mobile,json=EmployeeMobile,proto3" json:"Employee_mobile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Employee) Reset()         { *m = Employee{} }
func (m *Employee) String() string { return proto.CompactTextString(m) }
func (*Employee) ProtoMessage()    {}
func (*Employee) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a8c5235d50dfc18, []int{0}
}

func (m *Employee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Employee.Unmarshal(m, b)
}
func (m *Employee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Employee.Marshal(b, m, deterministic)
}
func (m *Employee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Employee.Merge(m, src)
}
func (m *Employee) XXX_Size() int {
	return xxx_messageInfo_Employee.Size(m)
}
func (m *Employee) XXX_DiscardUnknown() {
	xxx_messageInfo_Employee.DiscardUnknown(m)
}

var xxx_messageInfo_Employee proto.InternalMessageInfo

func (m *Employee) GetEmployeeId() int32 {
	if m != nil {
		return m.EmployeeId
	}
	return 0
}

func (m *Employee) GetEmployeeName() string {
	if m != nil {
		return m.EmployeeName
	}
	return ""
}

func (m *Employee) GetEmployeeMail() string {
	if m != nil {
		return m.EmployeeMail
	}
	return ""
}

func (m *Employee) GetEmployeeMobile() string {
	if m != nil {
		return m.EmployeeMobile
	}
	return ""
}

type EmpRequest struct {
	Input                *Employee `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *EmpRequest) Reset()         { *m = EmpRequest{} }
func (m *EmpRequest) String() string { return proto.CompactTextString(m) }
func (*EmpRequest) ProtoMessage()    {}
func (*EmpRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a8c5235d50dfc18, []int{1}
}

func (m *EmpRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmpRequest.Unmarshal(m, b)
}
func (m *EmpRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmpRequest.Marshal(b, m, deterministic)
}
func (m *EmpRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmpRequest.Merge(m, src)
}
func (m *EmpRequest) XXX_Size() int {
	return xxx_messageInfo_EmpRequest.Size(m)
}
func (m *EmpRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmpRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmpRequest proto.InternalMessageInfo

func (m *EmpRequest) GetInput() *Employee {
	if m != nil {
		return m.Input
	}
	return nil
}

type EmpResponse struct {
	Output               *Employee `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *EmpResponse) Reset()         { *m = EmpResponse{} }
func (m *EmpResponse) String() string { return proto.CompactTextString(m) }
func (*EmpResponse) ProtoMessage()    {}
func (*EmpResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a8c5235d50dfc18, []int{2}
}

func (m *EmpResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmpResponse.Unmarshal(m, b)
}
func (m *EmpResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmpResponse.Marshal(b, m, deterministic)
}
func (m *EmpResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmpResponse.Merge(m, src)
}
func (m *EmpResponse) XXX_Size() int {
	return xxx_messageInfo_EmpResponse.Size(m)
}
func (m *EmpResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EmpResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EmpResponse proto.InternalMessageInfo

func (m *EmpResponse) GetOutput() *Employee {
	if m != nil {
		return m.Output
	}
	return nil
}

func init() {
	proto.RegisterType((*Employee)(nil), "office.Employee")
	proto.RegisterType((*EmpRequest)(nil), "office.EmpRequest")
	proto.RegisterType((*EmpResponse)(nil), "office.EmpResponse")
}

func init() { proto.RegisterFile("Emp.proto", fileDescriptor_1a8c5235d50dfc18) }

var fileDescriptor_1a8c5235d50dfc18 = []byte{
	// 241 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x74, 0xcd, 0x2d, 0xd0,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xcb, 0x4f, 0x4b, 0xcb, 0x4c, 0x4e, 0x55, 0x9a, 0xc7,
	0xc8, 0xc5, 0xe1, 0x9a, 0x5b, 0x90, 0x93, 0x5f, 0x99, 0x9a, 0x2a, 0x24, 0xcf, 0xc5, 0x0d, 0x63,
	0xc7, 0x67, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0xb0, 0x06, 0x71, 0xc1, 0x84, 0x3c, 0x53, 0x84,
	0x94, 0xb9, 0x78, 0xe1, 0x0a, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x98, 0x14, 0x18, 0x35, 0x38, 0x83,
	0x78, 0x60, 0x82, 0x7e, 0x89, 0xb9, 0xa9, 0x28, 0x8a, 0x72, 0x13, 0x33, 0x73, 0x24, 0x98, 0x51,
	0x15, 0xf9, 0x26, 0x66, 0xe6, 0x08, 0xa9, 0x73, 0xf1, 0x23, 0x14, 0xe5, 0x27, 0x65, 0xe6, 0xa4,
	0x4a, 0xb0, 0x80, 0x95, 0xf1, 0xc1, 0x95, 0x81, 0x45, 0x95, 0x4c, 0xb8, 0x40, 0x0e, 0x08, 0x4a,
	0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x52, 0xe3, 0x62, 0xcd, 0xcc, 0x2b, 0x28, 0x2d, 0x01, 0xbb,
	0x8d, 0xdb, 0x48, 0x40, 0x0f, 0xe2, 0x0d, 0x3d, 0x98, 0xa6, 0x20, 0x88, 0xb4, 0x92, 0x39, 0xd8,
	0x27, 0x41, 0xa9, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x42, 0x1a, 0x5c, 0x6c, 0xf9, 0xa5, 0x25,
	0xf8, 0xf4, 0x41, 0xe5, 0x8d, 0xec, 0xc0, 0xd6, 0x05, 0xa7, 0x16, 0x95, 0x65, 0x26, 0xa7, 0x0a,
	0x19, 0x70, 0x31, 0xbb, 0xe6, 0x16, 0x08, 0x09, 0x21, 0x29, 0x87, 0xba, 0x44, 0x4a, 0x18, 0x45,
	0x0c, 0x62, 0x8f, 0x12, 0x83, 0x13, 0x7b, 0x14, 0xab, 0x6b, 0x6e, 0x41, 0x41, 0x52, 0x12, 0x1b,
	0x38, 0x9c, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc9, 0x99, 0xdb, 0xaf, 0x74, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EmpServiceClient is the client API for EmpService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EmpServiceClient interface {
	//unary
	Emp(ctx context.Context, in *EmpRequest, opts ...grpc.CallOption) (*EmpResponse, error)
}

type empServiceClient struct {
	cc *grpc.ClientConn
}

func NewEmpServiceClient(cc *grpc.ClientConn) EmpServiceClient {
	return &empServiceClient{cc}
}

func (c *empServiceClient) Emp(ctx context.Context, in *EmpRequest, opts ...grpc.CallOption) (*EmpResponse, error) {
	out := new(EmpResponse)
	err := c.cc.Invoke(ctx, "/office.EmpService/Emp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EmpServiceServer is the server API for EmpService service.
type EmpServiceServer interface {
	//unary
	Emp(context.Context, *EmpRequest) (*EmpResponse, error)
}

// UnimplementedEmpServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEmpServiceServer struct {
}

func (*UnimplementedEmpServiceServer) Emp(ctx context.Context, req *EmpRequest) (*EmpResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Emp not implemented")
}

func RegisterEmpServiceServer(s *grpc.Server, srv EmpServiceServer) {
	s.RegisterService(&_EmpService_serviceDesc, srv)
}

func _EmpService_Emp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmpServiceServer).Emp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.EmpService/Emp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmpServiceServer).Emp(ctx, req.(*EmpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EmpService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "office.EmpService",
	HandlerType: (*EmpServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Emp",
			Handler:    _EmpService_Emp_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "Emp.proto",
}
