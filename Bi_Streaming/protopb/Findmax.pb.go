// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Findmax.proto

package protopb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	Input                int32    `protobuf:"varint,1,opt,name=Input,proto3" json:"Input,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_7eafd0b759e98c4c, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetInput() int32 {
	if m != nil {
		return m.Input
	}
	return 0
}

type Response struct {
	Output               int32    `protobuf:"varint,1,opt,name=Output,proto3" json:"Output,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_7eafd0b759e98c4c, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetOutput() int32 {
	if m != nil {
		return m.Output
	}
	return 0
}

func init() {
	proto.RegisterType((*Request)(nil), "Bi_Streaming.Request")
	proto.RegisterType((*Response)(nil), "Bi_Streaming.Response")
}

func init() { proto.RegisterFile("Findmax.proto", fileDescriptor_7eafd0b759e98c4c) }

var fileDescriptor_7eafd0b759e98c4c = []byte{
	// 147 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x75, 0xcb, 0xcc, 0x4b,
	0xc9, 0x4d, 0xac, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x71, 0xca, 0x8c, 0x0f, 0x2e,
	0x29, 0x4a, 0x4d, 0xcc, 0xcd, 0xcc, 0x4b, 0x57, 0x92, 0xe7, 0x62, 0x0f, 0x4a, 0x2d, 0x2c, 0x4d,
	0x2d, 0x2e, 0x11, 0x12, 0xe1, 0x62, 0xf5, 0xcc, 0x2b, 0x28, 0x2d, 0x91, 0x60, 0x54, 0x60, 0xd4,
	0x60, 0x0d, 0x82, 0x70, 0x94, 0x94, 0xb8, 0x38, 0x82, 0x52, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53,
	0x85, 0xc4, 0xb8, 0xd8, 0xfc, 0x4b, 0x4b, 0x10, 0x4a, 0xa0, 0x3c, 0x23, 0x4f, 0x2e, 0x76, 0xa8,
	0x1d, 0x42, 0x76, 0x08, 0xa6, 0xa8, 0x1e, 0xb2, 0x4d, 0x7a, 0x50, 0x6b, 0xa4, 0xc4, 0xd0, 0x85,
	0x21, 0x86, 0x2b, 0x31, 0x68, 0x30, 0x1a, 0x30, 0x3a, 0x71, 0x46, 0xb1, 0x83, 0x9d, 0x59, 0x90,
	0x94, 0xc4, 0x06, 0x66, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x0e, 0xb9, 0xe2, 0x87, 0xc0,
	0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FindmaxClient is the client API for Findmax service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FindmaxClient interface {
	Findmax(ctx context.Context, opts ...grpc.CallOption) (Findmax_FindmaxClient, error)
}

type findmaxClient struct {
	cc *grpc.ClientConn
}

func NewFindmaxClient(cc *grpc.ClientConn) FindmaxClient {
	return &findmaxClient{cc}
}

func (c *findmaxClient) Findmax(ctx context.Context, opts ...grpc.CallOption) (Findmax_FindmaxClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Findmax_serviceDesc.Streams[0], "/Bi_Streaming.Findmax/Findmax", opts...)
	if err != nil {
		return nil, err
	}
	x := &findmaxFindmaxClient{stream}
	return x, nil
}

type Findmax_FindmaxClient interface {
	Send(*Request) error
	Recv() (*Response, error)
	grpc.ClientStream
}

type findmaxFindmaxClient struct {
	grpc.ClientStream
}

func (x *findmaxFindmaxClient) Send(m *Request) error {
	return x.ClientStream.SendMsg(m)
}

func (x *findmaxFindmaxClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FindmaxServer is the server API for Findmax service.
type FindmaxServer interface {
	Findmax(Findmax_FindmaxServer) error
}

// UnimplementedFindmaxServer can be embedded to have forward compatible implementations.
type UnimplementedFindmaxServer struct {
}

func (*UnimplementedFindmaxServer) Findmax(srv Findmax_FindmaxServer) error {
	return status.Errorf(codes.Unimplemented, "method Findmax not implemented")
}

func RegisterFindmaxServer(s *grpc.Server, srv FindmaxServer) {
	s.RegisterService(&_Findmax_serviceDesc, srv)
}

func _Findmax_Findmax_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(FindmaxServer).Findmax(&findmaxFindmaxServer{stream})
}

type Findmax_FindmaxServer interface {
	Send(*Response) error
	Recv() (*Request, error)
	grpc.ServerStream
}

type findmaxFindmaxServer struct {
	grpc.ServerStream
}

func (x *findmaxFindmaxServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

func (x *findmaxFindmaxServer) Recv() (*Request, error) {
	m := new(Request)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Findmax_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Bi_Streaming.Findmax",
	HandlerType: (*FindmaxServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Findmax",
			Handler:       _Findmax_Findmax_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "Findmax.proto",
}
